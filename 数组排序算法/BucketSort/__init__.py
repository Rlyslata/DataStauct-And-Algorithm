"""
桶排序（容器排序算法）：
    BucketSort(Data:values[]):
        <生成桶>            # 桶可以是堆栈，链表、队列、数组或其他数据结构，这将花费O（M)的时间，M是桶的数量
        <将数据分发到桶中>   # 对于N个数据，分发过程的消耗的时间是不变的，为O(N)
        <对各个通进行排序>   # 排序方式可以是使用插入、冒泡、选择、堆排，归并等,每个桶的平均数据量为N/M,因此排序总时间为O(M*F(N/M)),
                            # F为排序算法时间函数
        <收集桶>            # 将各个桶依次收集起来, 填充到values,完成排序，这一步花费O(N)的时间
    End BucketSort

    算法总的时间爱你复杂度为：O(M)+O(N)+O(M*F(N/M))+O(N),若N与M是相差不大的数，则时间复杂度为O(N+M)

    于计数排序相比，桶排序时间的不依赖于数的范围，而是取决于桶的数量，例如对1000万个数据排序，只是用10个桶，这样每个桶平均100万个数据，
    对每个桶排序花费的时间是很庞大的。

    对于分布均匀的大型数据集排序，桶排序明显优于堆排序，快速排序

"""